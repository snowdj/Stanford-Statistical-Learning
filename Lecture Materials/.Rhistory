install.packages("caret")
q = qt(df = 8, p = .975)
n = 9
df = n-1
q = qt(df = df, p = .975)
mn = 1100
mn + c(-1,1)*q*30/sqrt(n)
n = 9
deltawt = -2
df = n-1
q = qt(df = df, p = .975)
(-deltawt*sqrt(n))/q
deltawt+c(-1,1)*q*2.602/sqrt(n)
deltawt+c(-1,1)*q*2.60/sqrt(n)
deltawt+c(-1,1)*q*2.50/sqrt(n)
deltawt+c(-1,1)*q*2.50/sqrt(n)
n=10
varNew = .6
varOld = .68
varPool = ((n-1)*varNew+(n-1)*varOld)/(2*n-2)
meanN = 3
meanO = 5
meanN - meanO + c(-1,1)*qt(df=2*n-2, .975)*sqrt(varPool*(1/n+1/n))
meanN - meanO + c(-1,1)*qt(df=2*n-2, .95)*sqrt(varPool*(1/n+1/n))
qt(n=10,.975)
qt(df=10,.975)
qt(df=10,.95)
x = seq(0,1,1000)
x
x = seq(from = 0,to = 1,by = 1/1000)
plot(qexp(x),qnorm(x))
plot(x,qnorm(qexp(x)))
library(bootstrap)
install.packages("bootstrap")
library(bootstrap)
x=c(1,3)
bootstrap(x,2,mean)
library(boot)
boot.out <- boot(data=x, statistic = mean, R = 1000)
stat = function(x,i) {mean(x[i])}
boot.out <- boot(data=x, statistic = stat, R = 1000)
boot.out
boot.ci(boot.out)
boot.array(boot.out)
boot.out2 = bootstrap(x,1000,mean)
boot.out2
boot.out2 = bootstrap(x,1000,stat)
boot.out2
boot.out2 = bootstrap(x,1000,mean)
hist(boot.out2)
hist(boot.out2$thetastar)
install.packages(c("BH", "car", "caret", "geostatsp", "GGally", "jsonlite", "knitr", "magrittr", "pracma", "RCurl", "shiny", "sqldf", "XBRL"))
install.packages(c("caret", "RCurl", "XBRL"))
install.packages(c("caret", "RCurl", "XBRL"))
install.packages(c("caret", "RCurl", "XBRL"))
install.packages(c("caret", "RCurl"))
install.packages("caret")
install.packages("caret")
install.packages(c("httr", "roxygen2"))
install.packages("packrat")
install.packages("knitr")
install.packages("swirl")
install.packages("nlme")
install.packages(c("BH", "CORElearn", "forecast", "manipulate", "packrat", "quantmod", "RJDBC", "rmarkdown"))
install.packages(c("httr", "lazyeval", "manipulate", "rattle", "rstudioapi"))
install.packages("googleVis")
devtools::install_github('rstudio/shinyapps')
shinyapps::setAccountInfo(name='lytemar', token='6C1B14334FDD69C1444C73A55AC0C332', secret='NmtW6zrG3jwYutyOwS8zSHd8LbkrZ0SbM3vcpiKO')
require(devtools)
install_github('rCharts', 'ramnathv')
install.packages(c("BH", "caret", "geostatsp", "manipulate", "swirl"))
install_github("ropensci/plotly")
install.packages("rjson")
library(manipulate)
myPlot <- function(s) {
plot(cars$dist - mean(cars$dist), cars$speed - mean(cars$speed))
abline(0, s)
}
manipulate(myPlot(s), s = slider(0, 2, step = 0.1))
manipulate(myPlot, s = slider(0, 2, step = 0.1))
manipulate(myPlot(s), slider = x(0, 2, step = 0.1))
library(manipulate)
manipulate(myPlot(s), s = slider(0, 2, step = 0.1))
library(rCharts)
library(airquality)
data = data(airquality)
data
library(datasets)
data = airquality
dTable(airquality, sPaginationType = "full_numbers")
library(devtools)
install_github('slidify','ramnathv')
install_github('slidifyLibraries','ramnathv')
rm(data)
rm(airquality)
rm(myData)
rm(myNA)
rm(x)
rm(y)
rm(z)
rm(myPlot)
install.packages(c("forecast", "manipulate", "mosaic"))
install.packages(c("dplyr", "gstat", "manipulate", "XBRL"))
install.packages("fields")
install.packages("yhat")
install.packages("yhatr")
install.packages(c("kernlab", "manipulate", "nlme", "quantreg"))
.5+2*.2
library(islr)
library(ISLR)
531-18.69
s <- function(TV,radio) {6.7502+0.0191*TV+0.0289*radio+0.0011*TV*radio}
s(50,1)
29+1.1*50
.0289+.0011*250
install.packages(c("CORElearn", "manipulate", "packrat", "raster", "rmarkdown"))
install.packages("xtable")
install.packages(c("zoo", "Zelig", "xts"))
install.packages("tensor")
install.packages("rjson")
install.packages("car")
install.packages(c("stringr", "reshape2", "reshape"))
install.packages(c("plyr", "dplyr"))
install.packages("ape")
install.packages(c("BayesLogit", "bayesm"))
10.6513/.0055
exp(10.6513-.0055*1936.6)/(1+exp(10.6513-.0055*1936.6))
exp(-6+.05*40+1*3.5)/(1+exp(-6+.05*40+1*3.5))
b = c(-6, 0.05, 1)
x = c(1, 40, 3.5)
exp(dot(b,x))/(1+exp(dot(b,x)))
install.packages("pracma")
library(pracma)
exp(dot(b,x))/(1+exp(dot(b,x)))
dot(b,x)
x %*% b
(6-3.5)/.05
x
x[2] = 50
x
exp(dot(b,x))/(1+exp(dot(b,x)))
exp(b %*% x/(1+exp(dot(b,x)))
q
exp(b %*% x)/(1+exp(dot(b,x)))
exp(b %*% x)/(1+exp(b %*% x))
install.packages(c("gam", "gbm", "glmnet"))
install.packages(c("BradleyTerry2", "car", "manipulate", "pracma", "proxy", "shiny", "XBRL"))
install.packages("manipulate")
install.packages("leaps")
install.packages(c("bootstrap", "manipulate", "nlme", "R.methodsS3", "rms"))
help(package = splines)
libary(splines)
library(splines)
install.packages("nls2")
load("7.R.RData")
setwd("~/Documents/School/Stanford_Online/Stanford-Statistical-Learning/Lecture Materials")
load("7.R.RData")
plot(x,y)
fit<-lm(y~x)
fit
summary(fit)
fit2 <- lm(y ~ . + I(x^2))
fit2 <- lm(y ~ x + I(x^2))
summary(fit2)
